name: CI/CD Pipeline

on:
  push:
    branches: [main]

env:
  NODE_ENV: test

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm ci

      - run: npm run test
        env:
          CI: true

      - name: Upload coverage to SonarQube
        run: |
          sonar-scanner \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_SCANNER_OPTS: "-Dsonar.projectKey=my-app"

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - uses: actions/checkout@v3

      - name: Build Production
        run: |
          npm ci
          npm run build

      - name: Deploy to S3 (example)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-south-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-web-identity-token-file: ${{ secrets.AWS_WEB_IDENTITY_TOKEN_FILE }}

      - name: Sync S3
        run: |
          aws s3 sync build/ s3://my-react-app-bucket --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DIST_ID }} --paths "/*"
